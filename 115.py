# p.115 # 구현 # 성공!
# 2. 왕실의 나이트

# 행복 왕국의 왕실 정원은 체스판과 같은 8x8 좌표 평면이다. 왕실 정원의 특정한 한 칸에
# 나이트가 서있다. 나이트는 말을 타고 있기에 이동을 할 때는 L자 형태로만 이동할 수 있으며
# 정원 밖으로는 나갈 수 없다. 나이트는 특정한 위치에서 다음과 같은 2가지 경우로 이동할 수 있다.
# 1. 수평으로 두 칸 이동한 뒤에 수직으로 한 칸 이동하기
# 2. 수직으로 두 칸 이동한 뒤에 수평으로 한 칸 이동하기
# 이처럼 8x8 좌표 평면상에서 나이트의 위치가 주어졌을 때 나이트가 이동할 수 있는
# 경우의 수를 출력하는 프로그램을 작성하시오. (행 위치 1~8, 열 위치 a~h로 표현)
# 예를 들어 나이트가 a1에 있을 때 이동할 수 있는 경우의 수는 c2, b3이고
# 나이트가 c2에 있을 때 이동할 수 있는 경우의 수는 6가지이다.

# 첫째 줄에 8 x 8 좌표 평면상 현재 나이트가 위치한 곳의 좌표를 나타내는 두 문자로 구성된
# 문자열이 입력된다. 입력 문자는 a1처럼 열과 행으로 이뤄진다.
# 첫째 줄에 나이트가 이동할 수 있는 경우의 수를 출력하시오.

start = input()
# 좌, 우, 상, 하 기준으로 1, 2번을 각각 적용한 결과
# 즉 좌-1, 좌-2, 우-1, 우-2, 상-1, 상-2, 하-1, 하-2
# 튜플들의 집합 형태로 만듬. 튜플 = 변동되는 값 X
move_arr = [(-1, -2), (1, -2), (-1, 2), (1, 2), (-2, -1), (-2, 1), (2, -1), (2, 1)]

# 8x8 배열 기준으로 대입하기
std_x = ord(start[0])-ord('a')
std_y = int(start[1])-1
# print(std_x, std_y) # 기준점 확인

cnt = 0
for i in move_arr :
    if std_x + i[0] < 0 or std_x + i[0] > 8 :
        continue
    elif std_y + i[1] < 0 or std_y + i[1] > 8 :
        continue
    cnt+=1

print(cnt)

''' 교재가 제안하는 정답안 '''
# 현재 나이트의 위치 입력받기
input_data = input()
row = int(input_data[1])
column = int(ord(input_data[0])) - int(ord('a')) + 1
# 1,1 을 시작점으로 잡은 예시.

# 나이트가 이동할 수 있는 8가지 방향 정의
steps = [(-2, -1), (-1, -2), (1, -2), (2, -1), (2, 1), (1, 2), (-1, 2), (-2, 1)]

# 8가지 방향에 대하여 각 위치로 이동이 가능한지 확인
result = 0
for step in steps :
    # 이동하고자 하는 위치 확인
    next_row = row + step[0]
    next_column = column + step[1]
    # 해당 위치로 이동이 가능하다면 카운트 증가
    if next_row >= 1 and next_row <= 8 and next_column >= 1 and next_column <= 8 :
        result += 1

print(result)
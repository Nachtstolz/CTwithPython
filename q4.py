# P.314 # 그리디 # 성공
# Q04. 만들 수 없는 금액

# 동네 편의점 주인인 동빈이는 N개의 동전을 가지고 있다. 이때 N개의 동전을 이용해
# 만들 수 없는 양의 정수 금액 중 최솟값을 구하는 프로그램을 작성하라.
# 예를 들어, N=5이고 각 동전이 각각 3원, 2원, 1원, 1원, 9원짜리 (화폐 단위) 동전이라고
# 가정하자. 이때 동빈이가 만들 수 없는 양의 정수 금액 중 최솟값은 8원이다.
# 또 다른 예시로, N=3이고 각 동전이 각각 3원, 5원, 7원짜리 (화폐 단위) 동전이라고 가정하자.
# 이때 동빈이가 만들 수 없는 양의 정수 금액 중 최솟값은 1원이다.

# 첫째 줄에는 동전의 개수를 나타내는 양의 정수 N이 주어진다. (1<=N<=1,000)
# 둘째 줄에 각 동전의 화폐 단위를 나타내는 N개의 자연수가 주어지며, 각 자연수는 공백으로 구분한다.
# 이때 각 화폐 단위는 1,000,000 이하의 자연수이다.

from itertools import combinations

# 입력 받기
n = int(input())
arr = list(map(int, input().split()))
arr.sort() # 정렬

# 입력된 값들의 최종 합 = 배열 길이로 써먹기
length = sum(arr)
# 가장 크게 나올 수 있는 값을 배열 길이로 사용하여 체크 용으로 쓸 배열 생성
tmp = [0] * (length+1)
tmp[0] = 1 # 0번 인덱스는 계속 0이므로 최후 출력을 위해 1로 설정

# 동전 하나
for i in range(n) :
    tmp[arr[i]] = 1

# 동전 두 개 이상 -> 조합 생성
for i in range(2, n) :
    combi = list(combinations(arr, i))
    for j in range(len(combi)) :
        tmp[sum(combi[j])] = 1

print(tmp.index(0))
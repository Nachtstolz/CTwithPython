# P.315 # 그리디 # 교재 코드 추가 완료
# Q05. 볼링공 고르기

# A, B 두 사람이 볼링을 치고 있다. 두 사람은 서로 무게가 다른 볼링공을 고르려고 한다. 볼링공은 총 N개가 있으며
# 각 볼링공마다 무게가 적혀 있고, 공의 번호는 1번부터 순서대로 부여된다. 또한, 같은 무게의 공이 여러 개 있을 수 있지만
# 서로 다른 공으로 간주한다. 볼링공의 무게는 1부터 M까지의 자연수 형태로 존재한다.
# 예를 들어, N이 5이고, M이 3이며 각각의 무게가 차례대로 1, 3, 2, 3, 2일 때 각 공의 번호가 차례대로 1번부터
# 5번까지 부여됩니다. 이때 두 사람이 고를 수 있는 볼링공 번호의 조합을 구하면 다음과 같다.
# (1, 2) (1, 3) (1, 4) (1, 5) (2, 3) (2, 5) (3, 4) (4, 5)
# 결과적으로 두 사람이 공을 고르는 경우의 수는 8가지이다. N개의 공의 무게가 각각 주어질 때 두 사람이 볼링공을 고르는 경우의 수를
# 구하는 프로그램을 작성하세요.

# 첫째 줄에 볼링공의 개수 N, 공의 최대 무게 M이 공백으로 구분되어 각각 자연수 형태로 주어진다. (1<=N<=1,000 1<=M<=10)
# 둘째 줄에 각 볼링공의 무게 K가 공백으로 구분되어 순서대로 자연수 형태로 주어진다. (1<=K<=M)

n, m = map(int, input().split())
weight = list(map(int, input().split()))
res = 0

for i in range(n-1) :
    for j in range(i+1, n) :
        if weight[i] != weight[j] :
            res += 1

print(res)

''' 교재 풀이 '''
# 이 문제를 효과적으로 풀이하기 위해서는, 무게마다 볼링공이 몇 개 있는지 계산
# 이때 A가 특정한 무게의 볼링공을 선택했을 때, 이어서 B가 볼링공을 선택하는 경우를 차례대로 계산하여 문제 해결.
# A를 기준으로 무게가 낮은 볼링공부터 무게가 높은 볼링공까지 순서대로 하나씩 확인한다고 했을 때 다음과 같다.

# 1. A가 무게가 1인 공을 선택할 때의 경우의 수는 1(1인 공의 개수) x 4(B가 선택하는 경우의 수) = 4
# 2. A가 무게가 2인 공을 선택할 때의 경우의 수는 2(2인 공의 개수) x 2(B가 선택하는 경우의 수) = 4
# 3. A가 무게가 3인 공을 선택할 때의 경우의 수는 2(3인 공의 개수) x 0(B가 선택하는 경우의 수) = 0

# 단게가 진행됨에 따라, 'B가 선택하는 경우의 수'는 줄어드는데, 이미 계산했던 경우(조합)는 제외하기 때문이다.
# 또한 볼링공의 무게가 1부터 10까지만 존재할 수 있다고 명시되어 있다. 따라서 하나의 리스트 변수를 선언해서,
# 각 무게별로 볼링공이 몇 개가 존재하는지 기록할 수 있다.

n, m = map(int, input().split())
data = list(map(int, input().split()))

# 1부터 10까지 무게를 담을 수 있는 리스트
array = [0] * 11
for x in data :
    # 각 무게에 해당하는 볼링공의 개수 카운트
    array[x] += 1

result = 0
# 1부터 m까지의 각 무게에 대해 처리
for i in range(1, m+1) :
    n -= array[i] # 무게가 i인 볼링공의 개수 (A가 선택할 수 있는 개수) 제외
    result += array[i] * n # B가 선택하는 경우의 수와 곱하기

print(result)
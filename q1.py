# P.311 # 그리디 # 성공!
# Q01. 모험가 길드

# 한 마을에 모험가가 N명 있고, 모험가 길드에서는 N명의 모험가를 대상으로 '공포도' 측정.
# 모험가 길드장 동빈이는 모험가 그룹을 안전하게 구성하고자 공포도가 X인 모험가는 반드시 X명 이상으로
# 구성한 모험가 그룹에 참여해야 여행을 떠날 수 있도록 규정. 최대 몇 개의 모험가 그룹을 만들 수 있나?
# N명의 모험가에 대한 정보가 주어졌을 때, 여행을 떠날 수 있는 그룹 수의 최댓값을 구하라.
# 몇 명의 모험가는 마을에 그대로 남아있어도 되기에 모든 모험가를 특정 그룹에 넣을 필요 X

# 첫째 줄에 모험가의 수 N이 주어진다. (1<=N<=100,000)
# 둘째 줄에 각 모험가의 공포도 값을 N 이하의 자연수로 주어지고, 자연수는 공백 구분된다.
 
''' solved by my own way '''
n = int(input()) # 모험가 수 입력
hor = list(map(int, input().split())) # 각 모험가의 공포도 값
arr = [0] * (n+1) # 인덱스 = 공포도 값 단위 생성 그룹 수

for i in range(1, n+1) : # 공포도가 낮은 -> 높은 순으로
    arr[i] = hor.count(i)//i
    #m -= hor.count(i)

print(sum(arr))


''' solved by this book '''
n = int(input())
data = list(map(int, input().split()))
data.sort()

result = 0 # 총 그룹 수
count = 0 # 현재 그룹에 포함된 모허가 수

for i in data : # 공포도를 낮은 것부터 하나씩 확인하며
    count += 1 # 현재 그룹에 해당 모험가를 포함시키기
    if count >= i : # 현재 그룹에 포함된 모험가의 수가 현재의 공포도 이상이면, 그룹 결성
            result += 1 # 총 그룹 수 증가
            count = 0 # 현재 그룹에 포함된 모험가의 수 초기화

print(result) # 총 그룹 수 출력